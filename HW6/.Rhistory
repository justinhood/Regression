gpa=c(3.26,2.60,3.35,2.86,3.82,2.21,3.47)
salary=c(33.8,29.8,33.5,30.4,36.4,27.6,35.3)
mean(gpa)
sum(gpa*gpa)-(sum(gpa)**2)/7
1/7
1/7+((3.25-mean(gpa))**2)/(sum(gpa*gpa)-(sum(gpa)**2)/7)
2.447*.536321*sqrt(.158295)
33.362+2.447*.536321*sqrt(.158295)
33.362-2.447*.536321*sqrt(.158295)
33.362-2.571*.536321*sqrt(.158295)
33.362+2.571*.536321*sqrt(.158295)
33.362-2.571*.536321*sqrt(1+.158295)
33.362+2.571*.536321*sqrt(1+.158295)
11.46409+24.60221*4
11.46409+24.60221*5
138.1968-24.60221
time=c(8.0,4.7,3.7,2.8,8.9)
experience=c(1,8,4,16,1)
time=c(8.0,4.7,3.7,2.8,8.9,5.8,2.0,1.9,3.3)
experience=c(1,8,4,16,1,2,12,5,3)
plot(experience,time)
plot(experience,1/time)
invtime=time^(-1)
invexp=experience^(-1)
plot(invexp, time)
delete invtime
delete(invtime)
rm(invtime)
clear
rm(plot)
plot(invexp,time)
rm(all)
clc
experience=(1 8 4 16 1 2 12 5 3)
experience=(1,8,4,16,1,2,12,5,3)
experience=c(1 8 4 16 1 2 12 5 3)
experience=c(1,8,4,16,1,2,12,5,3)
experience=c(1,8,4,16,1,2,12,5,3)
time=c(8,4.7,3.7,2.8,8.9,5.8,2.0,1.9,3.3)
invexp=experience^(-1)
plot(invexp,time)
mod=lm(time ~ invexp)
summary(mod_)
summary(mod)
model.response(5)
2.0575+6.3537*5
2.0575+6.3537/5
SSE=sum(time**2)-(2.0575*sum(time)+6.3537*sum(time*invexp))
s2=SSE/7
s=sqrt(s2)
SSxx=sum(invexp**2)-((sum(invexp)))
SSxx=sum(invexp**2)-((sum(invexp))**2/9)
mean(invexp)
dist=1/9+((.2-mean(invexp))**2)/SSxx
v=s*2.365*sqrt(1+dist)
3.32824+v
3.32824-v
invexp
x=c(1,2,3)
y=c(4,5,6)
mod<- lm(y~x)
summary mod
summary(mod)
sum(x^2)
sum(y)
sum(x)
sum(xy)
sum(x*y)
x=c(1,2,3)
y=c(4,5,6)
mod <- lm(y~x)
summary(mod)
3*mean(y)*sum(x**2)-3*mean(x)*sum(x*y)
sum(x**2)-9*mean(x)**2
3*sum(x**2)-98mean(x)**2
3*sum(x**2)-9*mean(x)**2
3*sum(x*y)-9*mean(x)*mean(y)
clear()
setwd("~/Desktop/PSM/Fall 2018/Regression/HW6")
bills <- read.table("./energy.txt", header = TRUE)
y=bills$y
n=length(y)
t<-c(1:n)
ybar <- mean(y)
y1 <- y[2:n]
y2 <- y[1:(n-1)]
sp <- sum((y1-ybar)*(y2-ybar))
ss <- sum((y-ybar)^2)
d <- sp/ss
acf <- acf(cod, type = "correlation")
library(lmtest)
library(car)
library(forecast)
library(fpp)
install.packages("lmtest")
install.packages("car")
install.packages("forecast")
acf <- acf(cod, type = "correlation")
install.packages("tseries")
install.packages("curl")
libcurl4-openssl-dev
install.packages("tseries")
install.packages("fpp")
install.packages("forecast")
install.packages("car")
install.packages("lmtest")
library(lmtest)
library(car)
library(forecast)
library(fpp)
acf <- acf(cod, type = "correlation")
t <- c(1:n)
library(lmtest)
library(car)
library(forecast)
library(fpp)
detach()
dev.off()
###################  chap 6 #####################  #
hotel <- read.table(file.choose(), header=T)
y <- hotel$y
n <- length(y)
t <- c(1:n)
##########################Autocorrelation ########################
ybar <- mean(y)
y1 <- y[2:n]
y2 <- y[1:(n-1)]
sp <- sum((y1-ybar)*(y2-ybar))
ss <- sum((y-ybar)^2)
r.k <- sp/ss
acf <- acf(cod, type = "correlation")
acf <- acf(t, type = "correlation")
######################Durbin-Watson ###################
fit <- lm(y~t)
yhat <- fitted(fit)
e <- y-yhat
x1 <- e[2:n]
x2 <- e[1:(n-1)]
d <- (sum((x1-x2)^2))/ (sum(e^2))
dwtest(y~t,data=motel)
##################### seasonal variation ##################################
hotelts <- ts(hotel,frequency=12, start =c(1980,1))
plot.ts(hotelts,ylab="Room Averages(y)", xlab="Time")
abline(mean(y),0, col="red")
loghotelts <- log(hotelts)
plot.ts(loghotelts,ylab="Room Averages(log y)", xlab="Time")
abline(mean(log(y)),0, col="red")
sqrthotelts <- sqrt(hotelts)
plot.ts(sqrthotelts,ylab="Room Averages(log y)", xlab="Time")
abline(mean(sqrt(y)) ,0, col="red")
############### Decomposing seasonal data ##################
hotelts.compo <- decompose(hotelts)
hotelts.compo$seasonal
hotelts.compo$trend
plot(hotelts.compo)
############################ residual ####################
res <- ts(resid(fit1))
plot.ts(res,ylab="residual")
abline(0,0, col="blue")
###################################  Trend and Seasonality   ##################################
fit <- tslm(loghotelts ~ trend + season)
summary(fit)
b <- coefficients(fit)
f <- forecast(fit, h=12, level =95)
dwtest(fit)
plot.ts(loghotelts,ylab="Room Averages(log y)", xlab="Time",col="blue")
lines(fitted(fit),col="red")
######################################### Arima ##########################################
df <-data.frame(log(y), trend=t, Month=rep(1:12,14))
xreg <- cbind(trend=df$trend, Month=model.matrix(~as.factor(df$Month)))
xreg <- xreg[,-2]  # remove intercept
hotelarima <- ts(df$log.y, frequency = 12)
colnames(xreg) <- c("trend","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep", "Oct", "Nov", "Dec")
modArima <- arima(hotelarima, xreg=xreg, order=c(1,0,0))
summary(modArima)
b <- coefficients(modArima)
s <- 0.01867544
epsilon <- log(y[168])- (b[2] + b[3]*168)
yhat <- b[2]+ b[3]*169 +b[1]*epsilon
ll <- yhat - qnorm(.975)*s
ul <- yhat + qnorm(.975)*s
##########################################################################################
library(lmtest)
library(car)
library(forecast)
library(fpp)
bills <- read.table("./energy.txt", header = TRUE)
y <- bills$y
n <- length(y)
t <- c(1:n)
##########################Autocorrelation ########################
ybar <- mean(y)
y1 <- y[2:n]
y2 <- y[1:(n-1)]
sp <- sum((y1-ybar)*(y2-ybar))
ss <- sum((y-ybar)^2)
d <- sp/ss
require(graphics)
lh
y
acf <- acf(y, type = "correlation")
######################Durbin-Watson ###################
fit <- lm(y~t)
yhat <- fitted(fit)
e <- y-yhat
x1 <- e[2:n]
x2 <- e[1:(n-1)]
d <- (sum((x1-x2)^2))/ (sum(e^2))
dwtest(y~t,data=motel)
plot(t,y)
billsts <- ts(bills,frequency = 4)
billsts
plot.ts(billsts, ylab="Bill Value(y)", xlab="Time")
abline(mean(y),0, col="red")
logbillsts <- log(billsts)
plot.ts(logbillsts,ylab="Bill Value(log(y)", xlab="Time")
abline(mean(log(y)),0, col="red")
acf <- acf(cod, type = "correlation")
acf <- acf(d, type = "correlation")
acf <- acf(d, type = "correlation")
acf <- acf(y, type = "correlation")
acf <- acf(y, type = "correlation")
png('acf.png')
acf <- acf(y, type = "correlation")
dev.off()
######################Durbin-Watson ###################
fit <- lm(y~t)
yhat <- fitted(fit)
e <- y-yhat
x1 <- e[2:n]
x2 <- e[1:(n-1)]
d <- (sum((x1-x2)^2))/ (sum(e^2))
##########################Autocorrelation ########################
ybar <- mean(y)
y1 <- y[2:n]
y2 <- y[1:(n-1)]
sp <- sum((y1-ybar)*(y2-ybar))
ss <- sum((y-ybar)^2)
r.k <- sp/ss
######################Durbin-Watson ###################
fit <- lm(y~t)
yhat <- fitted(fit)
e <- y-yhat
x1 <- e[2:n]
x2 <- e[1:(n-1)]
d <- (sum((x1-x2)^2))/ (sum(e^2))
dwtest(y~t,data=motel)
######################################### Arima ##########################################
df <-data.frame(y, trend=t, quad=t^2, Quarter=rep(1:4,40))
xreg <- cbind(trend=df$trend, Quarter=model.matrix(~as.factor(df$Quarter)))
xreg <- xreg[,-2]  # remove intercept
energy <- ts(df$log.y, frequency = 12)
energy <- ts(df$y, frequency = 12)
colnames(xreg) <- c("trend","Q2","Q3","Q4")
modEnergy <- arima(energy, xreg=xreg, order=c(1,0,0))
summary(modEnergy)
b <- coefficients(modEnergy)
b
######################################### Arima ##########################################
df <-data.frame(y, trend=t, quad=t^2, Quarter=rep(1:4,40))
xreg <- cbind(trend=df$trend, Quarter=model.matrix(~as.factor(df$Quarter)))
xreg <- cbind(trend=df$trend,quad=df$quad, Quarter=model.matrix(~as.factor(df$Quarter)))
xreg <- xreg[,-3]
colnames(xreg) <- c("trend","Q2","Q3","Q4")
modEnergy <- arima(energy, xreg=xreg, order=c(1,0,0))
summary(modEnergy)
b <- coefficients(modEnergy)
b
sum((y-mean(y))**2)
s=sum((y-mean(y))**2)
s=s/39
s=sqrt(s)
s
residuals(modEnergy)
residuals(energy)
summary(modEnergy)
y
